### server port
server.port=8081
spring.application.name=springkeycloak-client

## logging
logging.level.org.springframework.security=INFO
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n

## keycloak
#spring.security.oauth2.client.provider.T1SpringBootKeycloak.issuer-uri=http://localhost:8080/realms/T1SpringBootKeycloak
#spring.security.oauth2.client.provider.T1SpringBootKeycloak.authorization-uri=http://localhost:8080/realms/T1SpringBootKeycloak/protocol/openid-connect/auth
#spring.security.oauth2.client.provider.T1SpringBootKeycloak.token-uri=http://localhost:8080/realms/T1SpringBootKeycloak/protocol/openid-connect/token
#
#spring.security.oauth2.client.registration.T1SpringBootKeycloak.provider=T1SpringBootKeycloak
#spring.security.oauth2.client.registration.T1SpringBootKeycloak.client-name=login-app-T1SpringBootKeycloak
#spring.security.oauth2.client.registration.T1SpringBootKeycloak.client-id=login-app
#spring.security.oauth2.client.registration.T1SpringBootKeycloak.client-secret=vHgZasaR2dnJUNyIFdDR6cNnlLyzmo0X
#spring.security.oauth2.client.registration.T1SpringBootKeycloak.scope=openid,offline_access,profile
#spring.security.oauth2.client.registration.T1SpringBootKeycloak.authorization-grant-type=authorization_code


#spring.security.oauth2.client.provider.OC4631.issuer-uri=http://localhost:8080/realms/OC4631
#spring.security.oauth2.client.provider.OC4631.authorization-uri=http://localhost:8080/realms/OC4631/protocol/openid-connect/auth
#spring.security.oauth2.client.provider.OC4631.token-uri=http://localhost:8080/realms/OC4631/protocol/openid-connect/token
#
#spring.security.oauth2.client.registration.OC4631.provider=OC4631
#spring.security.oauth2.client.registration.OC4631.client-name=login-app-OC4631
#spring.security.oauth2.client.registration.OC4631.client-id=login-app
#spring.security.oauth2.client.registration.OC4631.client-secret=vHgZasaR2dnJUNyIFdDR6cNnlLyzmo0X
#spring.security.oauth2.client.registration.OC4631.scope=openid,offline_access,profile
#spring.security.oauth2.client.registration.OC4631.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.extranet-realm.issuer-uri=http://localhost:8080/realms/entreprise-realm
spring.security.oauth2.client.provider.extranet-realm.authorization-uri=http://localhost:8080/realms/entreprise-realm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.extranet-realm.token-uri=http://localhost:8080/realms/entreprise-realm/protocol/openid-connect/token

spring.security.oauth2.client.registration.extranet-realm.provider=entreprise-realm
spring.security.oauth2.client.registration.extranet-realm.client-name=entreprise-client
spring.security.oauth2.client.registration.extranet-realm.client-id=entreprise-client
spring.security.oauth2.client.registration.extranet-realm.client-secret=LKnwKdNu3hr9HtGpyHk4ws2lmaP4MN2S
spring.security.oauth2.client.registration.extranet-realm.scope=openid,offline_access,profile
spring.security.oauth2.client.registration.extranet-realm.authorization-grant-type=authorization_code